*eol-lsp-hints.txt* Auto-generated from README.md. Do not make PRs to this file.

==============================================================================
Table of Contents                            *eol-lsp-hints-table-of-contents*

1. nvim-eol-lsp-hints                      |eol-lsp-hints-nvim-eol-lsp-hints-|
  - Installation              |eol-lsp-hints-nvim-eol-lsp-hints--installation|
  - Configuration            |eol-lsp-hints-nvim-eol-lsp-hints--configuration|
  - Usage                            |eol-lsp-hints-nvim-eol-lsp-hints--usage|
  - Limitations                |eol-lsp-hints-nvim-eol-lsp-hints--limitations|
  - About the author      |eol-lsp-hints-nvim-eol-lsp-hints--about-the-author|

==============================================================================
1. nvim-eol-lsp-hints                      *eol-lsp-hints-nvim-eol-lsp-hints-*

Aminimal plugin that displays LSP inlay-hints at the end of line, out of your
way.




INSTALLATION                  *eol-lsp-hints-nvim-eol-lsp-hints--installation*

>lua
    -- lazy.nvim
    {
        "chrisgrieser/nvim-eol-lsp-hints",
        event = "LspAttach",
        opts = {},
    },
    
    -- packer
    use {
        "chrisgrieser/nvim-eol-lsp-hints",
    }
<


CONFIGURATION                *eol-lsp-hints-nvim-eol-lsp-hints--configuration*

>lua
    -- default settings
    require("eol-lsp-hints").setup {
        icons = {
            type = "󰜁 ",
            parameter = "󰏪 ",
        },
        label = {
            padding = 1,
            marginLeft = 0,
        },
    }
<


USAGE                                *eol-lsp-hints-nvim-eol-lsp-hints--usage*

Just load the plugin.


LIMITATIONS                    *eol-lsp-hints-nvim-eol-lsp-hints--limitations*

Disabling/toggling LSP hints is not implemented yet.


ABOUT THE AUTHOR          *eol-lsp-hints-nvim-eol-lsp-hints--about-the-author*

In my day job, I am a sociologist studying the social mechanisms underlying the
digital economy. For my PhD project, I investigate the governance of the app
economy and how software ecosystems manage the tension between innovation and
compatibility. If you are interested in this subject, feel free to get in
touch.

I also occasionally blog about vim: Nano Tips for Vim
<https://nanotipsforvim.prose.sh>

- Academic Website <https://chris-grieser.de/>
- Mastodon <https://pkm.social/@pseudometa>
- ResearchGate <https://www.researchgate.net/profile/Christopher-Grieser>
- LinkedIn <https://www.linkedin.com/in/christopher-grieser-ba693b17a/>



Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
